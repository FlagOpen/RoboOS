cd third_party/DROID-SLAM
conda create -n droidenv python=3.9 -y
conda activate droidenv
conda install pytorch=1.10 torchvision torchaudio cudatoolkit=11.3 -c pytorch -y
conda install suitesparse -c conda-forge -y
pip install open3d==0.15.2 scipy opencv-python==4.7.0.72 matplotlib pyyaml==6.0.2 tensorboard # -i https://pypi.tuna.tsinghua.edu.cn/simple
pip install evo --upgrade --no-binary evo
pip install gdown
pip install numpy==1.23.0 numpy-quaternion==2023.0.4
wget https://data.pyg.org/whl/torch-1.10.0%2Bcu113/torch_scatter-2.0.9-cp39-cp39-linux_x86_64.whl
pip install torch_scatter-2.0.9-cp39-cp39-linux_x86_64.whl
# if apt does not provide gcc-10, run conda install gcc=10 gxx=10
sudo apt install gcc-10 g++-10
export CC=/usr/bin/gcc-10
export CXX=/usr/bin/g++-10
# if encounter ImportError: libtorch_cpu.so: cannot enable executable stack as shared object requires: Invalid argument,
# execute the following two cmds
sudo apt install execstack
execstack -c $CONDA_PREFIX/lib/python3.9/site-packages/torch/lib/libtorch_cpu.so

export CUDA_HOME=/usr/local/cuda-11.3
export PATH=/usr/local/cuda-11.3/bin:$PATH

python setup.py install


cd ../../sg
conda create -n sg python=3.9 -y
conda activate sg
# if apt does not provide gcc-10, run conda install gcc=10 gxx=10
pip install torch==2.3.1 torchvision==0.18.1 torchaudio==2.3.1 --index-url https://download.pytorch.org/whl/cu118 
pip install -r requirements.txt
cd ../third_party/segment-anything-2
pip install -e .  
pip install -e ".[demo]" 
cd ../../third_party/GroundingDINO
pip install -e .  
cd ../../third_party
pip install -r ./recognize-anything/requirements.txt  
pip install -e ./recognize-anything/ 
sudo apt-get install libopencv-dev
conda install opencv
cd ../sg/ace/dsacstar
python setup.py install
cd ../../../third_party/LightGlue
python -m pip install -e .
conda install -c pytorch faiss-cpu=1.7.4 mkl=2021 blas=1.0=mkl
conda install -c conda-forge libopenblas libcblas
cd ../../third_party/pytorch3d
python setup.py install
cd ../..
pip install -e .


cd sg
mkdir checkpoints
cd checkpoints
git lfs install
git clone https://huggingface.co/google-bert/bert-base-uncased
git clone https://huggingface.co/laion/CLIP-ViT-H-14-laion2B-s32B-b79K
# download droidslam checkpoint from https://drive.google.com/file/u/0/d/1PpqVt1H4maBa_GbPJp4NwxRsd9jk-elh/view?usp=sharing&pli=1
mkdir GroundingDINO segment-anything-2 recognize_anything
# download https://github.com/IDEA-Research/GroundingDINO/blob/main/groundingdino/config/GroundingDINO_SwinT_OGC.py and put it in GroundingDINO
wget https://github.com/IDEA-Research/GroundingDINO/releases/download/v0.1.0-alpha/groundingdino_swint_ogc.pth -o GroundingDINO/groundingdino_swint_ogc.pth
wget https://huggingface.co/spaces/xinyu1205/recognize-anything/resolve/main/ram_swin_large_14m.pth -O recognize_anything/ram_swin_large_14m.pth
wget https://dl.fbaipublicfiles.com/segment_anything_2/072824/sam2_hiera_large.pt -O segment-anything-2/sam2_hiera_large.pt
sudo apt install graphviz



#using pre-recorded data
# conda deactivate 
# conda activate droidenv
# python scripts/pose_estimation.py \
#     --datadir "data_example/room1" \
#     --calib "data_example/room1/calib.txt" \
#     --t0 0 \
#     --stride 1 \
#     --weights "checkpoints/droid-slam/droid.pth" \
#     --buffer 2048 \
#     --depth_ratio 1000
# conda deactivate 
# conda activate sg
# export PATH=/usr/local/cuda-11.8/bin:$PATH
# export LD_LIBRARY_PATH=/usr/local/cuda-11.8/lib64:$LD_LIBRARY_PATH

# python scripts/show_pointcloud.py \
#     --tags "room1" \
#     --pose_tags "poses_droidslam"

# export OPENAI_API_KEY="sk-dlmwezf4dYHM9J3HZvV5WyZbFF1b84ySgJySUp0YN2qSK1zL"
# export OPENAI_API_BASE="http://104.243.40.194:3000/v1"

# # if crash: pip install open3d==0.19.0
# python demo.py \
#     --tags "room1" \
#     --preprocess \
#     --debug \
#     --task_scene_change_level "Minor Adjustment" \
    

#record data
sudo mkdir -p /etc/apt/keyrings
curl -sSf https://librealsense.intel.com/Debian/librealsense.pgp | sudo gpg --dearmor -o /etc/apt/keyrings/librealsense.gpg
echo "deb [signed-by=/etc/apt/keyrings/librealsense.gpg] https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/librealsense.list
sudo apt-get update
# we use librealsense2 2.53.1 for L515 Camera
# https://github.com/IntelRealSense/librealsense/issues/7224
sudo apt-get install --allow-downgrades \
  librealsense2=2.53.1-0~realsense0.8251 \
  librealsense2-dev=2.53.1-0~realsense0.8251 \
  librealsense2-utils=2.53.1-0~realsense0.8251 \
  librealsense2-gl=2.53.1-0~realsense0.8251 \
  librealsense2-net=2.53.1-0~realsense0.8251 \
  librealsense2-udev-rules=2.53.1-0~realsense0.8251 \
  librealsense2-dkms=1.3.19-0ubuntu1
realsense-viewer #testing camera

# if you have trouble with numpy.float, run conda install numpy==1.23.0
python demo.py \
    --tags "office_test" \
    --scanning_room \
    --preprocess \
    --task_scene_change_level "Minor Adjustment" \
    --rs_serial_number "f1421695"

conda deactivate 
conda activate droidenv
python scripts/pose_estimation.py \
    --datadir "data_example/office_test" \
    --calib "data_example/office_test/calib.txt" \
    --t0 0 \
    --stride 1 \
    --weights "checkpoints/droid-slam/droid.pth" \
    --buffer 2048 \
    --depth_ratio 4000

conda deactivate 
conda activate sg
python scripts/show_pointcloud.py \
    --tags "office_test" \
    --pose_tags "poses_droidslam"

# if crash: pip install open3d==0.19.0
python demo.py \
    --tags "office_test" \
    --preprocess \
    --debug \
    --task_scene_change_level "Minor Adjustment" \
    --rs_serial_number "f1421695"